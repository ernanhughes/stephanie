# config/config.yaml
defaults:
  - _self_
  - db: postgres
  - plan_monitor: default
  
  - scorer/ebt/default
  - scorer/hrm/default
  - scorer/mrq/default
  - scorer/sicql/default
  - scorer/svm/default
  - scorer/contrastive_ranker/default
  - scorer/epistemic_hrm/default

  - agents/plan_trace_scorer
  - agents/literature
  - agents/literature_ranking
  - agents/prompt_tuning
  - agents/generation
  - agents/refiner
  - agents/review
  - agents/reflection
  - agents/ranking
  - agents/evolution
  - agents/meta_review
  - agents/proximity
  - agents/sharpening
  - agents/judge
  - agents/cot_long_generator
  - agents/cot_dspy_generator
  - agents/pipeline_judge
  - agents/supervisor
  - logging/json_logger

goal:
  goal_text: | 
    5. You are tasked with designing an **intelligent reasoning transfer framework** for AI systems.
    ## üéØ Problem Statement
    An AI system is trained on **high-quality reasoning traces** in one scientific domain.  
    We want the system to **apply and adapt those reasoning strategies** to new, unseen domains, while retaining rigor and clarity.  

    ## üß≠ Core Goal
    > How can this transfer loop be optimized for **generalization** and **self-improvement**, using symbolic prompts, scoring dimensions, and MR.Q-guided tuning?

    ## üìë Instructions
    1. **Analyze** the source reasoning strategies (how they are structured, scored, and represented).  
    2. **Design a symbolic transfer method** to apply them in new domains.  
    3. **Integrate scoring & feedback**:
      - Use multi-dimensional scoring (clarity, novelty, feasibility, etc.).  
      - Include MR.Q-guided optimization for continual improvement.  
    4. **Propose a self-improvement loop** that refines transfer strategies over time.  

    ## üì¶ Expected Output Formats
    - **Symbolic Prompt Program**  
    - **Multi-Dimensional Score Map**  
    - **Cross-Domain Transfer Loop**  

    ## üß† Reasoning Steps
    - Step 1: Understand the role of symbolic prompts.  
    - Step 2: Define scoring dimensions that generalize across domains.  
    - Step 3: Show how MR.Q-guided tuning adjusts transfer strategies.  
    - Step 4: Illustrate the self-improvement cycle.  
    - Step 5: Produce the final outputs in the formats above.  

    ‚ö†Ô∏è Be explicit, structured, and creative.  
    The output should read like a **research-level blueprint**.
  
  goal_type: "strategic"
  goal_category: "ai_transfer_learning"
  focus_area: "reasoning"
  strategy: "symbolic_transfer"
  difficulty: "hard"
  expected_formats:
    - "symbolic_prompt_program"
    - "multi_dimensional_score_map"
    - "cross_domain_transfer_loop"

paths:
  prompts: ${hydra:runtime.cwd}/prompts

report:
  generate_report: true
  path: ${hydra:runtime.cwd}/reports

web_search:
  engine: "searxng"
  instance_url: "http://localhost:8080"


embeddings:
  backend: hnet

pipeline:
  name: long_cot_pipeline
  version: "1.0"
  description: "Long COT Pipeline demonstrating X-REASONER integration with CoT agents."
  stages:
    - name: cot_long_generator
      cls: stephanie.agents.cot_generator.ChainOfThoughtGeneratorAgent
      enabled: false
      iterations: 1
    - name: ranking
      cls: stephanie.agents.ranking.RankingAgent
      enabled: false
      iterations: 1
    - name: cot_dspy_generator
      cls: stephanie.agents.dspy.cot_dspy_generator.ChainOfThoughtDSPyGeneratorAgent
      enabled: false
      iterations: 1
    - name: generation
      cls: stephanie.agents.generation.GeneratorAgent
      enabled: false
      iterations: 1