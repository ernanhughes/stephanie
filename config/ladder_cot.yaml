# config/config.yaml
defaults:
  - _self_
  - db: postgres
  - agents/pipeline_judge
  - agents/cot_generator
  - agents/cot_dspy_generator
  - logging/json_logger

goal:
  goal_text: Develop a reasoning transfer framework where an AI system trained on high-quality reasoning in one scientific domain can apply and adapt those strategies to new, unseen domains using symbolic prompts, scoring dimensions, and MR.Q-guided tuning. How can this transfer loop be optimized for generalization and self-improvement?
  goal_type: "strategic"
  goal_category: "ai_transfer_learning"
  focus_area: "reasoning"
  strategy: "symbolic_transfer"
  difficulty: "hard"
  expected_formats:
    - "symbolic_prompt_program"
    - "multi_dimensional_score_map"
    - "cross_domain_transfer_loop"

post_judgment:
  name: pipeline_judge
  enabled: true
  cls: stephanie.agents.pipeline_judge.PipelineJudgeAgent

paths:
  prompts: ${hydra:runtime.cwd}/prompts

report:
  generate_report: true
  path: ${hydra:runtime.cwd}/reports

embeddings:
  model: "mxbai-embed-large"
  dimension: 1024
  endpoint: "http://localhost:11434/api/embeddings"

pipeline:
  name: ladder_cot
  tag: "strategy_B"
  description: "Pipeline for generating hypotheses using Chain of Thought and DSPy agents"
  stages:
    - name: cot_generator
      cls: stephanie.agents.cot_generator.ChainOfThoughtGeneratorAgent
      enabled: true
      iterations: 1
    - name: cot_dspy_generator
      cls: stephanie.agents.dspy.cot_dspy_generator.ChainOfThoughtDSPyGeneratorAgent
      enabled: true
      iterations: 1
