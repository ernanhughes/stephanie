defaults:
  - _self_
  - db: postgres
  - plan_monitor: disabled
  - bus: nats   
  - logging/json_logger
  - mars/default
  - services/default
  - scorer: all  


  - agents/chat_mrq_trainer
  - agents/chat_sicql_trainer
  - agents/chat_hrm_trainer
  - agents/chat_scorer

embeddings:
  backend: hnet


goal:
  goal_text: I want to build an AI that can teach itself to solve complex problems better over time.
  goal_type: "tactical"
  goal_category: "meta_learning"
  focus_area: "self_improvement"
  strategy: "stepwise_decomposition"
  difficulty: "medium-high"
  expected_formats:
    - "symbolic_prompt_plan"
    - "stepwise_reasoning_trace"
    - "annotated_score_vector"

paths:
  prompts: ${hydra:runtime.cwd}/prompts

report:
  generate_report: true
  path: ${hydra:runtime.cwd}/reports

pipeline:
  name: chat training
  tag: chat_training
  description: "Uses chat history to train models. Different dynamics than traditional training."
  stages:
     - name: chat_mrq_trainer
       description: "Trains a MRQ model using chat conversations" 
       cls: stephanie.agents.maintenance.mrq_trainer.MRQTrainerAgent 
       enabled: false
       iterations: 1

     - name: chat_sicql_trainer
       description: "Trains a SICQL model using chat conversations"
       cls: stephanie.agents.maintenance.sicql_trainer.SICQLTrainerAgent
       enabled: false
       iterations: 1

     - name: chat_hrm_trainer
       description: "Train a HRM model to predict values usin chat conversation_turns"
       cls: stephanie.agents.maintenance.hrm_trainer.HRMTrainerAgent
       enabled: false
       iterations: 1

     - name: chat_tiny_trainer
       description: "Train a Tiny model to predict values using chat conversation_turns"
       cls: stephanie.agents.maintenance.tiny_trainer.TinyTrainerAgent
       enabled: false
       iterations: 1

     - name: chat_scorer
       cls: stephanie.agents.universal_scorer.UniversalScorerAgent
       enabled: false
       iterations: 1
