defaults:
  - _self_
  - db: postgres
  - agents/arxiv_search
  - agents/document_loader
  - agents/document_profiler
  - agents/paper_score
  - agents/knowledge_loader
  - agents/document_mrq_inference
  - agents/document_mrq_trainer
  - agents/document_ebt_trainer
  - agents/document_ebt_inference
  - agents/document_reward_scorer
  - agents/document_svm_trainer
  - agents/document_svm_inference
  - agents/scorable_embedding_backfill
  - agents/document_llm_inference
  - agents/knowledge_db_loader
  - agents/ethics
  - agents/scoring_memcube
  - agents/scoring_policy
  - agents/pipeline_judge
  - logging/json_logger

goal:
  goal_text: I want to build an AI that can read, refactor, and iteratively improve its own source code to become more efficient, reliable, and aligned with its evolving objectives.
  goal_type: "tactical"
  goal_category: "meta_learning"
  focus_area: "self_improvement"
  strategy: "stepwise_decomposition"
  difficulty: "medium-high"
  expected_formats:
    - "symbolic_prompt_plan"
    - "stepwise_reasoning_trace"
    - "annotated_score_vector"


post_judgment:
  name: pipeline_judge
  enabled: true
  cls: stephanie.agents.pipeline_judge.PipelineJudgeAgent

paths:
  prompts: ${hydra:runtime.cwd}/prompts

report:
  generate_report: true
  path: ${hydra:runtime.cwd}/reports

web_search:
  engine: "searxng"
  instance_url: "http://localhost:8080"


embeddings:
  model: "mxbai-embed-large"
  dimension: 1024
  endpoint: "http://localhost:11434/api/embeddings"

pipeline:
  name: policy
  tag: "search_arxiv"
  description: "Search Arxiv for papers related to a goal"
  stages:
     - name: document_mrq_trainer
       description: "Build document pairs for training and evaluation" 
       cls: stephanie.agents.maintenance.mrq_trainer.MRQTrainerAgent 
       enabled: true
       iterations: 1

     - name: document_svm_trainer
       description: "Train a model to predict document values using SVM" 
       cls: stephanie.agents.maintenance.svm_trainer.SVMTrainerAgent 
       enabled: true
       iterations: 1  

     - name: document_ebt_trainer
       description: "Train a model to predict document values based on EBT" 
       cls: stephanie.agents.maintenance.ebt_trainer.EBTTrainerAgent 
       enabled: true
       iterations: 1

     - name: knowledge_loader
       description: "Load knowledge from the scored papers into the system"
       cls: stephanie.agents.knowledge.knowledge_loader.KnowledgeLoaderAgent
       enabled: true
       iterations: 1

     - name: scorable_embedding_backfill
       description: "Backfill document embeddings for existing documents"
       cls: stephanie.agents.maintenance.scorable_embedding_backfill.DocumentEmbeddingBackfillAgent
       enabled: true
       iterations: 1

     - name: knowledge_db_loader
       description: "Load knowledge from the database into the system"
       cls: stephanie.agents.knowledge.knowledge_db_loader.KnowledgeDBLoaderAgent
       enabled: true
       iterations: 1

     - name: document_llm_inference
       description: "Infer LLM scores for documents" 
       cls: stephanie.agents.inference.llm_inference.LLMInferenceAgent 
       enabled: true
       iterations: 1

     - name: document_mrq_inference
       description: "Infer MRQ scores for documents" 
       cls: stephanie.agents.inference.mrq_inference.MRQInferenceAgent 
       enabled: true
       iterations: 
       
     - name: document_svm_inference
       description: "Infer SVM scores for documents" 
       cls: stephanie.agents.inference.svm_inference.SVMInferenceAgent
       enabled: true
       iterations: 
       
     - name: document_ebt_inference
       description: "Infer EBT scores for documents" 
       cls: stephanie.agents.inference.ebt_inference.EBTInferenceAgent 
       enabled: true
       iterations: 
       
     - name: document_reward_scorer
       description: "Score the documents based on their relevance and quality"
       cls: stephanie.agents.knowledge.document_reward_scorer.DocumentRewardScorerAgent
       enabled: true
       iterations: 1

     - name: ethics
       description: "Evaluate the ethical soundness of AI-generated advice" 
       cls: stephanie.agents.world.ethics.Ethics  
       enabled: true
       iterations: 1

     - name: scoring_policy
       description: "Apply scoring policy to evaluate documents"
       cls: stephanie.agents.inference.scoring_policy.ScoringPolicyAgent
       enabled: true
       iterations: 1


     - name: scoring_memcube
       description: "Apply scoring memcube to evaluate documents" 
       cls: stephanie.agents.inference.scoring_memcube.ScoringMemcubeAgent
       enabled: true
       iterations: 1
